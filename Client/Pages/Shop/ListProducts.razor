@page "/products"
@inject Microsoft.Extensions.Localization.IStringLocalizer<ListProducts> _localizer
@inject NavigationManager Navigation

<style>
    /*Product css*/
    .product-grid {
        padding: 8px;
    }

    .product-card {
        padding: 16px;
        border: 1px solid #e0e0e0;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
        position: relative;
        border-radius: 12px;
        overflow: hidden;
        height: 100%;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

        .product-card:hover {
            box-shadow: 0 10px 10px rgba(0, 0, 0, 0.555);
            transition: box-shadow 0.3s ease-in-out;
            transform: scale(1.02);
        }

    .img-product {
        width: 100%;
        height: 300px;
        object-fit: contain;
        border-radius: 10px;
    }

        .img-product:hover {
            transform: scale(1.02);
        }

    .badge-container {
        position: absolute;
        top: 8px;
        left: 8px;
        z-index: 2; /* Ensure badges appear above the image */
        display: flex;
        flex-direction: column;
        gap: 4px;
    }

        .badge-container .badge {
            background-color: #ffe2e2;
            color: #e91e63;
            font-size: 12px;
            padding: 4px 6px;
            border-radius: 4px;
            text-align: center;
        }

    .product-name {
        font-weight: 600;
        font-size: 16px;
        height: 48px;
        margin: 8px 0;
    }

    .specs {
        display: flex;
        gap: 12px;
        margin: 8px 0;
    }

        .specs .spec {
            background-color: #f2f2f2;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 12px;
            color: #333;
        }

    .price {
        color: #ff4d4f;
        font-weight: bold;
        font-size: 1.4em;
        margin-top: 8px;
    }

    .original-price {
        color: #b0b0b0;
        text-decoration: line-through;
        font-size: 0.9em;
        margin-bottom: 4px;
    }

    .product-specs {
        font-size: 14px;
        color: #666;
        margin-top: 8px;
        margin-bottom: 50px;
    }

    .product-rating {
        font-size: 14px;
        color: #ff9800;
        display: flex;
        align-items: center;
        margin-top: 8px;
    }

        .product-rating svg {
            margin-right: 4px;
        }

    .action-buttons {
        position: absolute;
        bottom: 16px;
        width: 100%;
        display: flex;
        justify-content: space-around;
        padding: 8px;
        box-sizing: border-box;
    }
</style>

<div class="search-container">
    <MudTextField T="string" ValueChanged="@(s => OnSearch(s))" Placeholder="@_localizer["Search..."]"
                  Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search"
                  IconSize="Size.Medium" Class="mt-0" />
</div>

<HeroTitle Title="@_localizer["Products"]" Description="@_localizer["All Products."]" />

@if (!_loaded)
{
    <MudProgressCircular Color="Color.Primary" Indeterminate="false" />
}
else if (_pagedData != null && _pagedData.Any())
{
    <MudGrid GutterSpacing="3" Class="product-grid">
        @foreach (var context in _pagedData)
        {
            <MudItem xs="12" sm="6" md="4" lg="3">
                <MudCard Class="product-card" Style="position: relative; padding: 16px; margin-bottom: 16px; height: 100%; border-radius: 12px;">
                    <MudCardContent>
                        <div class="badge-container">
                            <MudText Typo="Typo.overline" Class="badge">Trả góp 0%</MudText>
                            <MudText Typo="Typo.overline" Class="badge">Giá rẻ quá</MudText>
                        </div>
                        <img class="img-product" src="@(context.ImageDataURL)" Square="true" />
                        <MudText Typo="Typo.h6" Class="product-name">@context.Name</MudText>

                        <div class="specs">
                            <MudText Typo="Typo.body2" Class="spec">@context.Ram.Split(' ').FirstOrDefault() GB</MudText>
                            <MudText Typo="Typo.body2" Class="spec">@context.Rom.Split(' ').FirstOrDefault() GB</MudText>
                        </div>

                        <MudText Typo="Typo.h6" Color="Color.Error" Class="price">@context.Price.ToString("N0") đ</MudText>
                        <MudText Typo="Typo.caption" Class="original-price">@((context.Price * 1.14).ToString("N0")) đ -14%</MudText>

                        <MudText Typo="Typo.body2" Class="product-specs">
                            Màn hình: @context.Screen<br />
                            CPU: @context.CPU<br />
                            Card: @context.Card<br />
                            Pin: @context.Battery<br />
                            Khối lượng: @context.Weight
                        </MudText>

                    </MudCardContent>

                    <!-- Fixed Position for Buttons at the Bottom -->
                    <MudCardActions Class="action-buttons">
                        <div class="product-rating">
                            <MudIcon Icon="@Icons.Material.Filled.Star" Color="Color.Warning" />
                            <MudText Typo="Typo.caption">@context.Rate</MudText>
                        </div>
                        <MudButton Variant="Variant.Filled" @onclick="@(() => InvokeModal(context.Id))" Color="Color.Primary" Class="button-small" Style="margin-right: 8px;">
                            Xem chi tiết
                        </MudButton>
                    </MudCardActions>

                </MudCard>
            </MudItem>
        }
    </MudGrid>
}
