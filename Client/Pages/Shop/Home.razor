@page "/"
@page "/home"
@inject Microsoft.Extensions.Localization.IStringLocalizer<ListProducts> _localizer
@using LaptopStore.Application.Features.Products.Queries.GetAllPaged;

<style>
    .search-container {
        display: flex;
        align-items: center;
        margin-bottom: 10px;
    }

    .main-container {
        display: flex;
    }

    .filter-panel-container {
        width: 260px;
        padding: 16px;
        background-color: #f5f5f5;
        transition: transform 0.3s ease;
    }

    .filter-panel-hidden {
        display: none; /* Hide the filter panel */
    }

    .product-section {
        flex-grow: 1;
        padding-left: 16px; /* Spacing between filter and products */
        transition: margin-left 0.3s ease;
    }

    .menu-bar {
        display: flex;
        align-items: center;
        gap: 12px;
        padding: 8px 0;
        overflow-x: auto;
        white-space: nowrap;
    }

    .filter-chip {
        display: flex;
        align-items: center;
        gap: 4px;
        background-color: transparent;
        border: none;
        cursor: pointer;
        padding: 8px 12px;
    }

        .filter-chip:hover {
            border: 1px solid transparent;
            border-color: #1e88e5;
        }

    .filter-text {
        color: #333;
        font-size: 14px;
    }

    .brand-chip {
        border: 1px solid #e0e0e0;
        background-color: #f2f4f7;
        border-radius: 12px;
        padding: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 120px;
        height: 120px;
        box-shadow: 0 2px 4px #fff;
        flex-shrink: 0;
    }

        .brand-chip:hover {
            box-shadow: 0 4px 8px #fff;
            border: 1px solid transparent;
            border-color: #1e88e5;
        }

    .logo-brand {
        width: 100px;
        height: auto;
    }

    .logo-decription {
        width: 100px;
        height: auto;
    }

    .Price {
        color: red;
        font: bolder;
        text-align: center;
        font-size: 20px;
    }

    .nav-button {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        background-color: rgba(255, 255, 255, 0.8);
        border: none;
        border-radius: 50%;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 16px; /* Giảm kích thước font */
        width: 35px; /* Giảm kích thước nút */
        height: 35px; /* Giảm kích thước nút */
        z-index: 1;
    }

        .nav-button img {
            transition: transform 0.3s ease; /* Thêm hiệu ứng mượt khi chuyển đổi */
        }

        .nav-button:hover img {
            transform: scale(1.1); /* Phóng to ảnh bên trong nút khi hover */
        }

        .nav-button.left {
            left: 5px;
        }

        .nav-button.right {
            right: 5px;
        }

    .banner-container {
        position: relative;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 100%;
        height: auto;
        overflow: hidden;
    }

    .banner {
        display: flex;
        align-items: center;
        justify-content: space-around;
        width: 100%;
        height: 100%;
    }

        .banner img {
            width: 49%; /* Đặt mỗi ảnh chiếm 49% chiều rộng */
            height: auto;
        }

    /*Product css*/
    .product-grid {
        padding: 8px;
    }

    .product-card {
        padding: 16px;
        border: 1px solid #e0e0e0;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
        position: relative;
        border-radius: 12px;
        overflow: hidden;
        height: 100%;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .badge-container {
        position: absolute;
        top: 8px;
        left: 8px;
        z-index: 2; /* Ensure badges appear above the image */
        display: flex;
        flex-direction: column;
        gap: 4px;
    }

        .badge-container .badge {
            background-color: #ffe2e2;
            color: #e91e63;
            font-size: 12px;
            padding: 4px 6px;
            border-radius: 4px;
            text-align: center;
        }

    .product-name {
        font-weight: 600;
        font-size: 16px;
        height: 48px;
        margin: 8px 0;
    }

    .specs {
        display: flex;
        gap: 12px;
        margin: 8px 0;
    }

        .specs .spec {
            background-color: #f2f2f2;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 12px;
            color: #333;
        }

    .price {
        color: #ff4d4f;
        font-weight: bold;
        font-size: 1.4em;
        margin-top: 8px;
    }

    .original-price {
        color: #b0b0b0;
        text-decoration: line-through;
        font-size: 0.9em;
        margin-bottom: 4px;
    }

    .product-specs {
        font-size: 14px;
        color: #666;
        margin-top: 8px;
        margin-bottom:50px;
    }

    .product-rating {
        font-size: 14px;
        color: #ff9800;
        display: flex;
        align-items: center;
        margin-top: 8px;
    }

        .product-rating svg {
            margin-right: 4px;
        }

    .action-buttons {
        position: absolute;
        bottom: 16px;
        width: 100%;
        display: flex;
        justify-content: space-around;
        padding: 8px;
        box-sizing: border-box;
    }

</style>

<!-- Tìm kiếm chung cho cả hai bảng -->
<div class="top-header">
    <div class="search-container">
        <MudTextField T="string" ValueChanged="@(s => OnSearch(s))" Placeholder="@_localizer["Search..."]"
                      Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search"
                      IconSize="Size.Medium" Class="mt-0" />
    </div>
</div>

<div class="banner-container">
    <!-- Nút điều hướng bên trái -->
    <img class="nav-button left" src="/images/dieuhuong/is-less-than.png" @onclick="ShowPreviousImage" />

    <!-- Banner Images -->
    <MudPaper Class="banner">
        <img src="@bannerImages[currentImageIndex]" alt="Banner Image 1" style="width: 100%; height: auto;" />
        <img src="@bannerImages[secondImageIndex]" alt="Banner Image 2" style="width: 100%; height: auto;" />
    </MudPaper>

    <!-- Nút điều hướng bên phải -->
    <img class="nav-button right" src="/images/dieuhuong/is-greater-than.png" @onclick="ShowNextImage" />
</div>

<!-- Menu các thương hiệu -->
<div class="menu-bar">
    <!-- Filter panel -->
    <MudChip Class="filter-chip" OnClick="ToggleFilterPanel">
        <MudIcon Icon="@Icons.Material.Filled.FilterList" Color="Color.Primary" />
        <MudText Typo="Typo.body2" Class="filter-text">Lọc</MudText>
    </MudChip>

    <!-- Brand Chips with Logos -->
    <MudChip Class="brand-chip">
        <img Class="logo-brand" src="/images/brand/hp-icon.png" href="#" />
    </MudChip>
    <MudChip Class="brand-chip">
        <img Class="logo-brand" src="/images/brand/asus-icon.png" href="#" />
    </MudChip>
    <MudChip Class="brand-chip">
        <img Class="logo-brand" src="/images/brand/dell-icon.png" href="#" />
    </MudChip>
    <MudChip Class="brand-chip">
        <img Class="logo-brand" src="/images/brand/lenovo-icon.png" href="#" />
    </MudChip>
    <MudChip Class="brand-chip">
        <img Class="logo-brand" src="/images/brand/acer-icon.png" href="#" />
    </MudChip>
    <MudChip Class="brand-chip">
        <img Class="logo-brand" src="/images/brand/mac-icon.png" href="#" />
    </MudChip>
    <MudChip Class="brand-chip">
        <img Class="logo-brand" src="/images/brand/msi-icon.png" href="#" />
    </MudChip>
    <MudChip Class="brand-chip">
        <img Class="logo-brand" src="/images/brand/samsung-icon.png" href="#" />
    </MudChip>
</div>
<MudGrid>
    <!-- Filter Panel on the Left Side -->
    <MudItem xs="12" md="3" Class="@GetFilterPanelClass()">
        <!-- Toggle Button for Filter Panel -->
       
        <!-- Conditionally Render Filter Panel -->
        @if (isFilterPanelVisible )
        {
            <MudPaper Class="filter-panel" >
                <HeroTitle Title="@_localizer["Bộ lọc tìm kiếm"]" />
                <MudExpansionPanels>

                    <!-- Brand Filter -->
                    <MudExpansionPanel Text="@_localizer["Brand"]">
                        @foreach (var brand in _brands)
                        {
                            <div style="display: flex; align-items: center; gap: 10px; margin-bottom: 8px;">
                                <MudCheckBox @bind-Checked="brand.IsSelected" />
                                <img src="@brand.LogoPath" alt="@brand.Name" class="logo-brand" />
                            </div>
                        }
                    </MudExpansionPanel>

                    <!-- Description Filter -->
                    <MudExpansionPanel Text="@_localizer["Description"]">
                        @foreach (var description in _descriptions)
                        {
                            <div style="display: flex; align-items: center; gap: 10px; margin-bottom: 8px;">
                                <MudCheckBox @bind-Checked="description.IsSelected" Label="@description.Name" />
                                <img src="@description.DescriptionPath" alt="@description.Name" class="logo-decription" />
                            </div>
                        }
                    </MudExpansionPanel>

                    <!-- Price Filter -->
                    <MudExpansionPanel Text="@_localizer["Price"]">
                        <MudRadioGroup T="string" @bind-SelectedValue="SelectedPriceRange">
                            <MudRadio T="string" Value="all" /><label>Tất cả</label><br>
                            <MudRadio T="string" Value="under10" /><label>Dưới 10 triệu</label><br>
                            <MudRadio T="string" Value="10to15" /><label>Từ 10 - 15 triệu</label><br>
                            <MudRadio T="string" Value="15to20" /><label>Từ 15 - 20 triệu</label><br>
                            <MudRadio T="string" Value="20to25" /><label>Từ 20 - 25 triệu</label><br>
                            <MudRadio T="string" Value="25to30" /><label>Từ 25 - 30 triệu</label><br>
                            <MudRadio T="string" Value="over30" /><label>Trên 30 triệu</label><br>
                        </MudRadioGroup>
                    </MudExpansionPanel>

                    <!-- Rate Filter -->
                    <MudExpansionPanel Text="@_localizer["Rate"]">
                        <MudRadioGroup T="string" @bind-SelectedValue="SelectedRateRange">
                            <MudRadio T="string" Value="all" /><label>Tất cả</label> <br>
                            <MudRadio T="string" Value="4andAbove" /><label>4 sao trở lên</label><br>
                            <MudRadio T="string" Value="3andAbove" /><label>3 sao trở lên</label><br>
                            <MudRadio T="string" Value="2andAbove" /><label>2 sao trở lên</label><br>
                            <MudRadio T="string" Value="1andAbove" /><label>1 sao trở lên</label><br>
                        </MudRadioGroup>
                    </MudExpansionPanel>

                </MudExpansionPanels>

                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="ApplyFilters">Áp dụng lọc</MudButton>
            </MudPaper>
        }
    </MudItem>

    <!-- Product Grid on the Right Side -->
    <MudItem xs="12" md="9" Class="@GetProductGridContainerClass()">
        <!-- Featured Products Section -->
        <HeroTitle Title="@_localizer["Sản phẩm nổi bật"]"/>
        @if (!_loaded)
        {
            <MudProgressCircular Color="Color.Primary" Indeterminate="false" />
        }
        else if (_featuredProducts.Any())
        {
            <MudGrid GutterSpacing="3" Class="product-grid">
                @foreach (var context in _featuredProducts)
                {
                    <MudItem xs="12" sm="6" md="4" lg="4">
                        <MudCard Class="product-card" Style="padding: 16px; margin-bottom: 16px; height: 100%;">
                            <MudCardContent>
                                <div class="badge-container">
                                    <MudText Typo="Typo.overline" Class="badge">Trả góp 0%</MudText>
                                    <MudText Typo="Typo.overline" Class="badge">Giá rẻ quá</MudText>
                                </div>
                                <MudAvatar Image="@(context.ImageDataURL)" Square="true" Style="height: 250px; width: 100%; object-fit: cover; border-radius: 8px;" />
                                <MudText Typo="Typo.h6" Class="product-name">@context.Name</MudText>

                                <div class="specs">
                                    <MudText Typo="Typo.body2" Class="spec">Ram: @context.Ram.Split(' ').FirstOrDefault()</MudText>
                                    <MudText Typo="Typo.body2" Class="spec">SSD: @context.Rom.Split(' ').FirstOrDefault()</MudText>
                                </div>

                                <MudText Typo="Typo.h6" Color="Color.Error" Class="price">@context.Price.ToString("N0") đ</MudText>
                                <MudText Typo="Typo.caption" Class="original-price">@((context.Price * 1.14).ToString("N0")) đ -14%</MudText>

                                <MudText Typo="Typo.body2" Class="product-specs">
                                    Màn hình: @context.Screen<br />
                                    CPU: @context.CPU<br />
                                    Card: @context.Card<br />
                                    Pin: @context.Battery<br />
                                    Khối lượng: @context.Weight
                                </MudText>

                            </MudCardContent>

                            <MudCardActions Class="action-buttons">
                                <div class="product-rating">
                                    <MudIcon Icon="@Icons.Material.Filled.Star" Color="Color.Warning" />
                                    <MudText Typo="Typo.caption">@context.Rate</MudText>
                                </div>
                                <MudButton Variant="Variant.Filled" Color="Color.Primary" Style="margin-right: 8px;">Xem chi tiết</MudButton>
                                <MudButton Variant="Variant.Text" Color="Color.Secondary">So sánh</MudButton>
                            </MudCardActions>
                        </MudCard>
                    </MudItem>
                }
            </MudGrid>
        }
        <br />
        <!-- High Rate Products Section -->
        <HeroTitle Title="@_localizer["Sản phẩm được đánh giá cao"]"/>
        @if (!_loaded)
        {
            <MudProgressCircular Color="Color.Primary" Indeterminate="false" />
        }
        else if (_RatedProducts.Any())
        {
            <MudGrid GutterSpacing="3" Class="product-grid">
                @foreach (var context in _RatedProducts)
                {
                    <MudItem xs="12" sm="6" md="4" lg="4">
                        <MudCard Class="product-card" Style="padding: 16px; margin-bottom: 16px; height: 100%;">
                            <MudCardContent>
                                <div class="badge-container">
                                    <MudText Typo="Typo.overline" Class="badge">Trả góp 0%</MudText>
                                    <MudText Typo="Typo.overline" Class="badge">Giá rẻ quá</MudText>
                                </div>
                                <MudAvatar Image="@(context.ImageDataURL)" Square="true" Style="height: 250px; width: 100%; object-fit: cover; border-radius: 8px;" />
                                <MudText Typo="Typo.h6" Class="product-name">@context.Name</MudText>

                                <div class="specs">
                                    <MudText Typo="Typo.body2" Class="spec">Ram: @context.Ram.Split(' ').FirstOrDefault()</MudText>
                                    <MudText Typo="Typo.body2" Class="spec">SSD: @context.Rom.Split(' ').FirstOrDefault()</MudText>
                                </div>

                                <MudText Typo="Typo.h6" Color="Color.Error" Class="price">@context.Price.ToString("N0") đ</MudText>
                                <MudText Typo="Typo.caption" Class="original-price">@((context.Price * 1.14).ToString("N0")) đ -14%</MudText>

                                <MudText Typo="Typo.body2" Class="product-specs">
                                    Màn hình: @context.Screen<br />
                                    CPU: @context.CPU<br />
                                    Card: @context.Card<br />
                                    Pin: @context.Battery<br />
                                    Khối lượng: @context.Weight
                                </MudText>

                            </MudCardContent>

                            <MudCardActions Class="action-buttons">
                                <div class="product-rating">
                                    <MudIcon Icon="@Icons.Material.Filled.Star" Color="Color.Warning" />
                                    <MudText Typo="Typo.caption">@context.Rate</MudText>
                                </div>
                                <MudButton Variant="Variant.Filled" Color="Color.Primary" Style="margin-right: 8px;">Xem chi tiết</MudButton>
                                <MudButton Variant="Variant.Text" Color="Color.Secondary">So sánh</MudButton>
                            </MudCardActions>
                        </MudCard>
                    </MudItem>
                }
            </MudGrid>
        }
    </MudItem>
</MudGrid>

@code {
    private string GetProductGridContainerClass() =>
        isFilterPanelVisible ? "product-grid-container with-filter" : "product-grid-container full-screen";

    private string GetFilterPanelClass() =>
        isFilterPanelVisible ? "filter-panel-visible" : "filter-panel-hidden";
}
